;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir                 = src
build_dir               = .pioenvs
build_cache_dir         = .cache
default_envs            = 
                        ;d1_mini_usb
                        d1_mini_ota
                        ;nodemcuv2
                        ;nodemcu
extra_configs = platformio_user_env.ini
            
; -----------------------------------------------------------------------------------------------
; WeMos D1 R2 and mini support
[env:d1_mini_usb]
platform                = espressif8266
board                   = d1_mini
framework               = arduino
build_flags             = ${esp82xx_defaults.build_flags}
build_unflags           = -Wall
monitor_speed           = 115200
check_tool              = clangtidy
check_flags             = clangtidy: --checks=-*,cert-*,clang-analyzer-* --fix
board_build.filesystem  = littlefs

; *** Upload USB 
upload_resetmethod    = ${usb_defaults.upload_resetmethod}
upload_speed          = ${usb_defaults.upload_speed}
upload_protocol       = ${usb_defaults.upload_protocol}
upload_port           = ${usb_defaults.upload_port}
extra_scripts           = ${scripts_defaults.extra_scripts}

[env:d1_mini_ota]
platform                = espressif8266
board                   = d1_mini
framework               = arduino
build_flags             = ${esp82xx_defaults.build_flags}
build_unflags           = -Wall
monitor_speed           = 115200
check_tool              = clangtidy
check_flags             = clangtidy: --checks=-*,cert-*,clang-analyzer-* --fix
board_build.filesystem  = littlefs

; *** Upload OTA
upload_protocol         = ${ota_defaults.upload_protocol}
upload_flags            = ${ota_defaults.upload_flags}
upload_port             = ${ota_defaults.upload_port}
extra_scripts           = ${scripts_defaults.extra_scripts}

; -----------------------------------------------------------------------------------------------
; NodeMcuv2
[env:nodemcuv2]
platform                = espressif8266
board                   = nodemcuv2
framework               = arduino
build_flags             = ${esp82xx_defaults.build_flags}
build_unflags           = -Wall
monitor_speed           = 115200
check_tool              = clangtidy
check_flags             = clangtidy: --checks=-*,cert-*,clang-analyzer-* --fix

; *** Upload USB 
upload_resetmethod      = ${usb_defaults.upload_resetmethod}
upload_speed            = ${usb_defaults.upload_speed}
upload_protocol         = ${usb_defaults.upload_protocol}
upload_port             = ${usb_defaults.upload_port}
extra_scripts           = ${scripts_defaults.extra_scripts}

; -----------------------------------------------------------------------------------------------
; NodeMcu
[env:nodemcu]
platform                = espressif8266
board                   = nodemcu
framework               = arduino
build_flags             = ${esp82xx_defaults.build_flags}
build_unflags           = -Wall
monitor_speed           = 115200
check_tool              = clangtidy
check_flags             = clangtidy: --checks=-*,cert-*,clang-analyzer-* --fix

; *** Upload USB
upload_resetmethod      = ${usb_defaults.upload_resetmethod}
upload_speed            = ${usb_defaults.upload_speed}
upload_protocol         = ${usb_defaults.upload_protocol}
upload_port             = ${usb_defaults.upload_port}
extra_scripts           = ${scripts_defaults.extra_scripts}


; -----------------------------------------------------------------------------------------------
[scripts_defaults]
extra_scripts           = piotools/name-firmware.py

[esp82xx_defaults]
build_flags             = -D NDEBUG
                          -Wl,-Map,firmware.map

